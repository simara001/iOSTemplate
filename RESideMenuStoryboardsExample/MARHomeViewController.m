//
//  DEMOFirstViewController.m
//  RESideMenuStoryboards
//
//  Created by Roman Efimov on 10/9/13.
//  Copyright (c) 2013 Roman Efimov. All rights reserved.
//

#import "MARHomeViewController.h"
#import "UIColor+CoolColors.h"
#import "STHTTPRequest.h"
#import <Parse/Parse.h>

@interface MARHomeViewController ()

@end

@implementation MARHomeViewController

- (IBAction)showMenu
{
    [self.sideMenuViewController presentMenuViewController];
}

-(void)viewDidLoad {
    /* * * * * * * * * * * * * * * * *
     * Customizing the Nav Bar
     * http://www.appcoda.com/customize-navigation-status-bar-ios-7/
     * * * * * * * * * * * * * * * * */
    [self.navigationController.navigationBar setBarTintColor:[UIColor coolPurple]];
    [self.navigationController.navigationBar setBarStyle:UIBarStyleBlackTranslucent];
    [self callDilbert];
    
    /* * * * * * * * * * * * * * * * *
     * Logging In with Demo User to
     * Parse
     * * * * * * * * * * * * * * * * */
    [PFUser logInWithUsernameInBackground:@"myname" password:@"mypass"
                                    block:^(PFUser *user, NSError *error) {
                                        if (user) {
                                            // Do stuff after successful login.
                                        } else {
                                            // The login failed. Check error to see why.
                                        }
                                    }];
}


/* * * * * * * * * * * * * * * * *
 * Calling Dilbert.io is a project
 * that generates a url that mocks
 * the data you are expecting
 * in this case (emails)
 * http://dilbert.io/#/
 * * * * * * * * * * * * * * * * */
-(void)callDilbert {
    
    /* * * * * * * * * * * * * * * * *
     * Using STHTTP to make the call
     * to the WS generated by 
     * Dilbert.io
     * https://github.com/nst/STHTTPRequest
     * * * * * * * * * * * * * * * * */
    STHTTPRequest *request = [STHTTPRequest requestWithURLString:@"http://dilbert.io/api/mock/6DE3DF2D-9EC3-591B-BB9B-46FB065E8E92"];
    
    request.completionBlock = ^(NSDictionary *headers, NSString *body) {
        NSLog(@"The result: %@", body);
    };
    request.errorBlock = ^(NSError *error) {
        NSLog(@"There was an error: %@", error);
    };
    [request startAsynchronous];
}

@end
